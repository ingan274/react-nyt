{"version":3,"sources":["components/Container/index.js","utils/api.js","components/Card/index.js","components/Article/index.js","pages/Home/index.js","components/Header/index.js","pages/NoMatch/index.js","App.js","serviceWorker.js","index.js"],"names":["Container","props","className","children","getArticles","search","axios","get","saveArticle","articleData","post","getSavedArticles","deleteArticle","articleId","delete","Card","cardTitle","Article","href","url","rel","target","title","description","onClick","handleClick","_id","buttonText","Home","state","articles","savedArticles","q","componentDidMount","API","then","res","console","log","catch","err","handleArticleSave","id","savedArticle","find","article","handleArticleDelete","handleInputChange","event","name","value","setState","handleFormSubmit","preventDefault","renderResults","map","web_url","author","handleDelete","renderSaved","key","date","render","type","onChange","Component","Header","NoMatch","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.918f37ca.chunk.js","sourcesContent":["  \nimport React from \"react\";\n\nconst Container = props => (\n    <div className=\"container-fluid\">{props.children}</div>\n)\n\nexport default Container;","import axios from \"axios\";\n\nexport default {\n    getArticles: search => axios.get(`/api/google/${search}`),\n    \n    saveArticle: articleData => axios.post(\"/api/articles\", articleData),\n\n    getSavedArticles: () => axios.get(\"/api/articles\"),\n\n    deleteArticle: articleId => axios.delete(`/api/articles/${articleId}`)\n} ","  import React from \"react\";\nimport \"./style.css\";\n\nconst Card = props => (\n    <div className=\"card\">\n        <div className=\"card-header\">{props.cardTitle}</div>\n        {props.children}\n    </div>\n)\n\nexport default Card; ","import React from \"react\";\n\nconst Article = props => (\n    <li className=\"list-group-item\">\n        <p className=\"articleTitle\"><a href={props.url} rel=\"noopener noreferrer\" target=\"_blank\">{props.title}</a></p>\n        <p className=\"articleDesc\">{props.description}</p>\n        <button className=\"btn\" onClick={() => props.handleClick(props._id)}>\n            {props.buttonText}\n        </button>\n    </li>\n)\n\nexport default Article;","import React, { Component } from \"react\";\nimport API from \"../../utils/api\";\nimport Card from \"../../components/Card\";\nimport Article from \"../../components/Article\";\nimport \"./style.css\";\n\nclass Home extends Component {\n    state = {\n        articles: [],\n        savedArticles: [],\n        q: \"\"\n    }\n\n    componentDidMount = () => {\n        this.getArticles();\n        this.getSavedArticles();\n    }\n\n    getArticles = () => {\n        const search = this.state.q\n        API.getArticles(search)\n            .then(res => {\n                // this.setState({ articles: res. })\n                console.log(\"result\",res)\n            })\n            .catch(err => console.log(err));\n    }\n\n    getSavedArticles = () => {\n        API.getSavedArticles()\n            .then(res => {\n                // this.setState({ savedArticles: res.articles })\n                console.log(\"saved\",res)\n            })\n            .catch(err => console.log(err));\n    }\n\n    handleArticleSave = id => {\n        const savedArticle = this.state.articles.find(article => article._id === id);\n        API.saveArticle(savedArticle)\n            .then(res => {\n                this.getArticles();\n                this.getSavedArticles();\n            });\n    }\n\n    handleArticleDelete = id => {\n        API.deleteArticle(id)\n            .then(res => {\n                this.getArticles();\n                this.getSavedArticles();\n            })\n    }\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        })\n    }\n\n    handleFormSubmit = event => {\n        event.preventDefault();\n        this.getArticles();\n    }\n\n    renderResults = () => {\n        if (this.state.article) {\n            return (<Card cardTitle=\"Results\">\n                <ul className=\"list-group list-group-flush\">\n                    {this.state.articles.map(article => (\n                        <Article\n                            title={article.title}\n                            url={article.web_url}\n                            description={article.description}\n                            author={article.author}\n                            handleClick={this.handleArticleSave}\n                            handleDelete={this.handleArticleDelete}\n                            buttonText=\"Save Article\"\n                        />\n                    ))}\n                </ul>\n            </Card>\n            )\n        } else {\n            return (\n                <Card cardTitle=\"Results\">\n                   <p className=\"noResults\"> No Articles found. Please put in a search.</p>\n            </Card>\n            )\n        }\n    }\n\n    renderSaved = () => {\n        if (this.state.article) {\n            return (\n                <Card cardTitle=\"Saved\">\n                    <ul className=\"list-group list-group-flush\">\n                        {this.state.savedArticles.map(article => (\n                            <Article\n                                key={article._id}\n                                _id={article._id}\n                                title={article.title}\n                                url={article.url}\n                                date={article.date}\n                                handleClick={this.handleArticleDelete}\n                                buttonText=\"Delete Article\"\n                            />\n                        ))}\n                    </ul>\n                </Card>\n            )\n        } else {\n            return (\n                <Card cardTitle=\"Saved\">\n                     <p className=\"noResults\"> No Articles where saved</p>\n                </Card>\n            )\n        }\n    }\n\n    render = () => (\n        <div className=\"container\">\n            <Card cardTitle=\"Search\">\n                <form className=\"text-center\">\n                    <div className=\"form-group\">\n                        <input\n                            type=\"text\"\n                            className=\"form-control\"\n                            id=\"topic\"\n                            name=\"q\"\n                            value={this.state.q}\n                            onChange={this.handleInputChange}\n                        />\n                    </div>\n                    <button className=\"btn\" onClick={this.handleFormSubmit}>Search</button>\n                </form>\n            </Card>\n\n            {this.renderResults()}\n            {this.renderSaved()}\n\n\n        </div>\n    )\n}\n\nexport default Home;","\nimport React from \"react\";\nimport \"./style.css\"\n\nconst Header = props => (\n    <div className=\"row header\">\n        <div className=\"titleText\">\n            <h1 className=\"title\">News Search</h1>\n            <h1 className=\"subtitle\">Your one-stop shop to top news</h1>\n        </div>\n    </div>\n)\n\nexport default Header;","import React from \"react\";\n\nconst NoMatch = () => (\n    <div className=\"text-center\">\n        <h2>Error 404: Page Not Found</h2>\n        <h3><a href=\"/\">Try heading home?</a></h3>\n    </div>\n)\n\nexport default NoMatch;","  \nimport React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Container from \"./components/Container\";\nimport Home from \"./pages/Home\";\nimport Header from \"./components/Header\";\nimport NoMatch from \"./pages/NoMatch\";\n\nconst App = () => (\n  <Container>\n    <Header />\n    <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route component={NoMatch} />\n        </Switch>\n    </Router>\n  </Container>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}