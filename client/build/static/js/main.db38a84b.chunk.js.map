{"version":3,"sources":["components/Container/index.js","utils/filterParams.js","utils/API.js","components/Card/index.js","components/Article/index.js","pages/Home/index.js","components/Header/index.js","pages/NoMatch/index.js","App.js","serviceWorker.js","index.js"],"names":["Container","props","className","children","params","Object","keys","filter","key","reduce","acc","curr","getArticles","axios","get","filterParams","saveArticle","articleData","post","getSavedArticles","deleteArticle","articleId","delete","Card","cardTitle","Article","href","url","rel","target","title","description","buttonColor","onClick","handleClick","_id","buttonText","Home","state","articles","savedArticles","q","componentDidMount","API","then","res","setState","data","catch","err","console","log","handleArticleSave","id","savedArticle","find","article","handleArticleDelete","handleInputChange","event","name","value","handleFormSubmit","preventDefault","render","type","onChange","map","headline","main","web_url","handleDelete","date","Component","Header","NoMatch","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.db38a84b.chunk.js","sourcesContent":["  \nimport React from \"react\";\n\nconst Container = props => (\n    <div className=\"container-fluid\">{props.children}</div>\n)\n\nexport default Container;","export default params =>\n    Object.keys(params)\n        .filter(key => params[key])\n        .reduce((acc, curr) => {\n            acc[curr] = params[curr];\n            return acc\n        }, {})","import axios from \"axios\";\nimport filterParams from \"./filterParams\";\n\nexport default {\n    getArticles: params => axios.get(\"/api/google\", { params: filterParams(params) }),\n    \n    saveArticle: articleData => axios.post(\"/api/articles\", articleData),\n\n    getSavedArticles: articleData => axios.get(\"/api/articles\"),\n\n    deleteArticle: articleId => axios.delete(`/api/articles/${articleId}`)\n} ","  import React from \"react\";\nimport \"./style.css\";\n\nconst Card = props => (\n    <div className=\"card\">\n        <div className=\"card-header\">{props.cardTitle}</div>\n        {props.children}\n    </div>\n)\n\nexport default Card; ","import React from \"react\";\n\nconst Article = props => (\n    <li className=\"list-group-item\">\n        <p className=\"articleTitle\"><a href={props.url} rel=\"noopener noreferrer\" target=\"_blank\">{props.title}</a></p>\n        <p className=\"articleDesc\">{props.description}</p>\n        <button className={`btn btn-${props.buttonColor}`} onClick={() => props.handleClick(props._id)}>\n            {props.buttonText}\n        </button>\n    </li>\n)\n\nexport default Article;","import React, { Component } from \"react\";\nimport API from \"../../utils/API\";\nimport Card from \"../../components/Card\";\nimport Article from \"../../components/Article\";\nimport \"./style.css\";\n\nclass Home extends Component {\n    state = {\n        articles: [],\n        savedArticles: [],\n        q: \"\"\n    }\n\n    componentDidMount = () => {\n        this.getArticles();\n        this.getSavedArticles();\n    }\n\n    getArticles = () => {\n        API.getArticles({\n            q: this.state.q\n        })\n            .then(res => this.setState({ articles: res.data }))\n            .catch(err => console.log(err));\n    }\n\n    getSavedArticles = () => {\n        API.getSavedArticles()\n            .then(res => this.setState({ savedArticles: res.data }))\n            .catch(err => console.log(err));\n    }\n\n    handleArticleSave = id => {\n        const savedArticle = this.state.articles.find(article => article._id === id);\n        API.saveArticle(savedArticle)\n            .then(res => {\n                this.getArticles();\n                this.getSavedArticles();\n            });\n    }\n\n    handleArticleDelete = id => {\n        API.deleteArticle(id)\n            .then(res => {\n                this.getArticles();\n                this.getSavedArticles();\n            })\n    }\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        })\n    }\n\n    handleFormSubmit = event => {\n        event.preventDefault();\n        this.getArticles();\n    }\n\n    render = () => (\n        <div className=\"container\">\n            <Card cardTitle=\"Search\">\n                <form className=\"text-center\">\n                    <div className=\"form-group\">\n                        <input\n                            type=\"text\"\n                            className=\"form-control\"\n                            id=\"topic\"\n                            name=\"q\"\n                            value={this.state.q}\n                            onChange={this.handleInputChange}\n                        />\n                    </div>\n                    <button className=\"btn\" onClick={this.handleFormSubmit}>Search</button>\n                </form>\n            </Card>\n\n            <Card cardTitle=\"Results\">\n                <ul className=\"list-group list-group-flush\">\n                    {this.state.articles.map(article => (\n                        <Article\n                            key={article._id}\n                            _id={article._id}\n                            title={article.headline.main}\n                            url={article.web_url}\n                            description={article.description}\n                            handleClick={this.handleArticleSave}\n                            handleDelete={this.handleArticleDelete}\n                            buttonText=\"Save Article\"\n                            buttonColor=\"warning\"\n                        />\n                    ))}\n                </ul>\n            </Card>\n            <Card cardTitle=\"Saved\">\n                <ul className=\"list-group list-group-flush\">\n                    {this.state.savedArticles.map(article => (\n                        <Article\n                            key={article._id}\n                            _id={article._id}\n                            title={article.title}\n                            url={article.url}\n                            date={article.date}\n                            handleClick={this.handleArticleDelete}\n                            buttonText=\"Delete Article\"\n                            buttonColor=\"outline-warning\"\n                        />\n                    ))}\n                </ul>\n            </Card>\n        </div>\n    )\n}\n\nexport default Home;","\nimport React from \"react\";\nimport \"./style.css\"\n\nconst Header = props => (\n    <div className=\"row header\">\n        <div className=\"titleText\">\n            <h1 className=\"title\">News Search</h1>\n            <h1 className=\"subtitle\">Your one-stop shop to top news</h1>\n        </div>\n    </div>\n)\n\nexport default Header;","import React from \"react\";\n\nconst NoMatch = () => (\n    <div className=\"text-center\">\n        <h2>Error 404: Page Not Found</h2>\n        <h3><a href=\"/\">Try heading home?</a></h3>\n    </div>\n)\n\nexport default NoMatch;","  \nimport React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Container from \"./components/Container\";\nimport Home from \"./pages/Home\";\nimport Header from \"./components/Header\";\nimport NoMatch from \"./pages/NoMatch\";\n\nconst App = () => (\n  <Container>\n    <Header />\n    <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route component={NoMatch} />\n        </Switch>\n    </Router>\n  </Container>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}